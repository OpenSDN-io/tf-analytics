# -*- mode: python; -*-

#
# Copyright (c) 2013 Juniper Networks, Inc. All rights reserved.
#

Import('BuildEnv')
env = BuildEnv.Clone()

sources = [
    'MANIFEST.in',
    'CHANGES.txt',
    'LICENSE.txt',
    'README.txt',
    'tf-snmp-collector.conf',
    'snmp.conf',
    'requirements.txt',
    'setup.py',
    'tf_snmp_collector/__init__.py',
    'tf_snmp_collector/main.py',
    'tf_snmp_collector/snmpcfg.py',
    'tf_snmp_collector/snmpctrlr.py',
    'tf_snmp_collector/snmp.py',
    'tf_snmp_collector/snmpuve.py',
    'tf_snmp_collector/snmp_config_db.py',
    'tf_snmp_collector/snmp_config_handler.py',
    'tf_snmp_collector/device_config.py',
    'tf_snmp_collector/scanner.py',
    ]

common_sources = [
    '#src/contrail-analytics/contrail-opserver/analytics_logger.py',
    '#src/contrail-analytics/contrail-opserver/config_handler.py'
]

mibs = Glob('mibs/*')

prouter_pkg = env.SandeshGenPy('prouter.sandesh', 'tf_snmp_collector/sandesh/', False)
snmp_collector_info_pkg = env.SandeshGenPy('snmp_collector_info.sandesh', 'tf_snmp_collector/sandesh/', False)
nodeinfo_pkg = env.SandeshGenPy('#src/contrail-common/base/sandesh/nodeinfo.sandesh', 'tf_snmp_collector/sandesh/', False)
cpuinfo_pkg = env.SandeshGenPy('#src/contrail-common/base/sandesh/cpuinfo.sandesh', 'tf_snmp_collector/sandesh/nodeinfo/', False)
process_info_pkg = env.SandeshGenPy('#src/contrail-common/base/sandesh/process_info.sandesh', 'tf_snmp_collector/sandesh/nodeinfo/', False)

common_sources_rules = [env.Install('tf_snmp_collector', f) for f in common_sources]

sdist_depends = [ prouter_pkg, snmp_collector_info_pkg, nodeinfo_pkg,
                  cpuinfo_pkg, process_info_pkg, common_sources_rules ]

version = '0.1.dev0'               # Make this match what is in setup.py

# XXX Was this disabled/removed as part of repo split? If so, it might
# explain the version discrepancy. Probably this should be done via
# version setting in setup.py
#with open("CHANGES.txt") as f:
#    version = f.read().split(",")[0][1:]

cd_cmd = 'cd ' + Dir('.').path + ' && '
sdist_gen = env.Command('dist/tf_snmp_collector-' \
        + version + '.tar.gz',
        sources + sdist_depends, cd_cmd + 'python3 setup.py sdist')
env.Depends(sdist_gen, sdist_depends)
env.Alias('src/contrail-analytics/tf-snmp-collector/' + \
        'tf_snmp_collector:sdist', sdist_gen)

src_rules = [env.Install(Dir("."),
    '#src/contrail-analytics/tf-snmp-collector/' + f) for f in sources]
src_rules += [env.Install(Dir("."), f) for f in common_sources]

import os

buildspace_link = os.environ.get('CONTRAIL_REPO')
if buildspace_link:
    # in CI environment shebang limit exceeds for python
    # in easy_install/pip, reach to it via symlink
    top_path = buildspace_link + '/' + Dir('.').path
    top_dir = Dir(top_path)
else:
    top_dir = Dir('.')

env.Append(ENV = {'BUILDTOP': Dir(env['TOP']).abspath})

doc_files = []
doc_files += env['ANALYTICS_DOC_FILES']
doc_files += env.SandeshGenDoc('prouter.sandesh')
doc_files += env.SandeshGenDoc('snmp_collector_info.sandesh')

if 'install' in BUILD_TARGETS:
    install_whl_cmd = env.Command(
        None, sources + sdist_depends,
        cd_cmd + 'python3 setup.py bdist_wheel --dist-dir /pip')
    env.Depends(install_whl_cmd, sdist_depends)
    env.Alias('install', install_whl_cmd)

env.Alias('install', env.Install(env['INSTALL_DOC'] + '/../mibs/netsnmp',
             mibs))

env.Alias('install', env.Install(
    env['INSTALL_MESSAGE_DOC'] + '/tf-snmp-collector/', doc_files))

# Local Variables:
# mode: python
# End:
